use System, Excel, Stream, File, Concurrency;

include etlFramework.Settings as Settings;

var settings = Settings->getSettings();

var pathParsers = [];
    // {"regex":null,"replacement":"z:/nieuweMap/$1"}

clean("Document", pathParsers, settings.system.threadCount);
clean("Container", pathParsers, 1); // threadCount always 1 for Container

private function clean(type, pathParsers, threadCount)
{
    System.print("Start cleaning " :: type :: "(s)...", "INFO");

    var pipeline = [
        {
            "robot" : "advancedFeatures/cleaning/lib/GetDeleteObjects.xill",
            "config" : {
                "pathParsers" : pathParsers,
                "elasticsearch" : settings.general.elasticsearch,
                "index" : settings.system.defaultIndexPattern,
                "type" : type
            },
            "threadCount" : 1 // do not change
        },
        {
                // "robot" : "etlFramework/plugins/console/target/Print.xill",
                "robot" : "advancedFeatures/cleaning/lib/CustomFSAction.xill",
                "threadCount" : threadCount,
                "config" : {
                    "targetPathField" : {"path":"%value%"},
                    "actionField" : {"action" : "%value%"}
                }
        },
        {
            "robot" : "advancedFeatures/cleaning/lib/ErrorHandler.xill",
            "config" : {
                "elasticsearch" : settings.general.elasticsearch   
            },
            "threadCount" : 1 // do not change
        }
    ];
    
    Concurrency.run(pipeline);

    System.print("Finished cleaning " :: type :: "(s).", "INFO");    
}
